## This is a UNIX conf file that contains all information relating to
# the HAFS configuration.  UNIX conf is used because of how easy it is
# to parse (even GrADS can do it).  The syntax:
#
#      [section]
#      var = value
#
# For generation of namelists for Fortran programs, we use this syntax:
#
#     [section]
#     namelist.nlvar = value
#
# to set the value of namelist &namelist's nlvar variable.  Also, the
# special variable "namelist" lists additional conf sections to
# recurse into to get more namelist variables after the current conf
# section is parsed.  Any variable will only be set once: the first
# time it is seen.

## Sets basic configuration options used by all components.
#
# This section sets basic configuration options used by all components.  
# Several special variables in this section are set by the ProdConfig 
# object itself, which will overwrite them if they're set in this
# file:
# * YMDHM = analysis time (201304261830 = April 26, 2013, 18:30 UTC)
# * YMDH = analysis time excluding minute (2013042618)
# * YMD = analysis time, excluding hour and minute
# * year, YYYY = analysis time's year (ie.: 2013)
# * YY = last two digits of year
# * century, CC = first two digits of year
# * month, MM = analysis time's month (ie.: 04)
# * day, DD = analysis time's day (ie.: 26)
# * hour, cyc, HH = analysis time's hour (ie.: 18)
# * minute, min = analysis time's minute (ie.: 30)
#
# There may be additional variables depending on what subclass (if
# any) of the ProdConfig is used.  You must specify the mandatory EXPT
# value, which is the name of the experiment to run.
[config]
EXPT=HAFS ;; Experiment name, used for finding installation locations

# SUBEXPT={EXPT}
# storm={ENV[STORM]}
# stnum={ENV[stormenv]}
# basin1=l
# stormlat=31.5
# stormlon=-73.7
# domlat=25.0
# domlon=-75.3

## The storm label: storm1, storm2, etc.
#
# This string is always "storm" followed by a single-digit number.  It
# is used by NCO to decide where certain files and directories are
# located.  It also gives automation systems a way of determining
# storm filenames without having to know the storm name or ID.
stormlabel=storm{storm_num}

# Similar to stormlabel, except it currently is not used by NCO.
# Useful when running multiple storms in a workflow.
global_stormlabel=storm{global_storm_num}

# Location for the HAFS database file.  Note that there must be only
# one of these per workflow (storm, cycle).  The ProdConfig class will
# also set the dsetfile variable if it is not already set:
datastore={WORKhafs}/hafs_state.sqlite3

## The main configuration file.
CONFhafs={com}/{stormlabel}.conf

ENS=99   ;; The ensemble number; do not change.  The laucher sets it.

GFSVER=PROD2017 ;; GFS version

## Configure file and directory paths
[dir]
utilexec={HOMEhafs}/nwport/util/exec ;; utilities ported from WCOSS
statusfile={WORKhafs}/{stormlabel}.{YMDH} ;; cycle status file
intercom={WORKhafs}/intercom  ;; dir for communicating data files between jobs
lockdir={WORKhafs}/lock       ;; lock files for post-processing
INPUThafs=./ ; {WORKhafs}/input    ;; parent model, obs, etc.

PARMgsi={PARMhafs}/hafs-gsi/   ;; GSI input data for everything except CRTM
FIXcrtm={FIXhafs}/hafs-crtm-2.2.3/ ;; GSI CRTM input data

## Domain center location file in COM.
#
# This is the full path to the domain center location file, which MUST
# be in com.  It is used to determine whether a cycle has a com
# directory:
domlocfile={com}/{vit[stnum]:02d}{vit[basin1lc]}.{vit[YMDH]}.domain.center

## File to check in a prior cycle's com, to see if the cycle exists.
#
# File to use to check if a prior cycle exists for a given storm.
# This only applies to the single storm HAFS.  It should not use the
# vit[] variable; instead, use oldvit[].
HISTCHECK={oldcom}/{oldvit[stnum]:02d}{oldvit[basin1lc]}.{oldvit[YMDH]}.domain.center

## The name of the gsi status file in the com directory
gsistatus={stormlabel}.gsi_status

## Operational name of the gsi status file
gsistatus2=gsi_status.{vit[stormname]}{vit[stnum]:02d}{vit[basin1lc]}.{cycle}

## Executable program locations
[exe]
## grib_utils util programs: need load the grib_util module
# cnvgrib, copygb, copygb2, degrib2, grb2index, grbindex, grib2grib, wgrib, wgrib2

# tar/htar/hsi: These three are not used in EMC-maintained production
# jobs since NCO maintains ksh-based archiving jobs.  When EMC runs,
# we get these from the $PATH:
tar=tar    ;; GNU Tar
htar=htar  ;; HTAR tape archiving program
hsi=hsi    ;; hsi tape manipulation program

mpiserial={EXEChafs}/mpiserial ;; Executes serial programs via MPI
#
# The rest of these are compiled by the HAFS sorc/ build system:
## Atmosphere and utilities:
forecast={EXEChafs}/hafs_forecast.x
post={EXEChafs}/hafs_post.x

chgres={EXEChafs}/hafs_chgres.x
orog={EXEChafs}/hafs_orog.x

make_hgrid={EXEChafs}/hafs_make_hgrid.x
make_solo_mosaic={EXEChafs}/hafs_make_solo_mosaic.x
fregrid={EXEChafs}/hafs_fregrid.x
filter_topo={EXEChafs}/hafs_filter_topo.x
shave={EXEChafs}/hafs_shave.x

gettrk={EXEChafs}/hafs_gettrk.x
tave={EXEChafs}/hafs_tave.x
vint={EXEChafs}/hafs_vint.x
supvit={EXEChafs}/hafs_supvit.x

gsi={EXEChafs}/hafs_gsi.x
enkf={EXEChafs}/hafs_enkf.x

## Configure the prelaunch configuration overrides, run in
## hafs_expt, and implemented in hafs.prelaunch
[prelaunch]
## Minimum allowed wind for running relocation and GSI.
# *** Need double check the prelaunch script 
# The tcvitals wind will be checked and if the intensity is below this
# value in m/s then relocation and GSI will be disabled.  The GFS
# analysis vortex will be used directly without relocation, intensity
# adjustment, size adjustment, or data assimilation.
#min_wind_for_init=11

# Per-forecast-center configurations
rsmc_overrides=no      ;; read parm/hafs_JTWC.conf and parm/hafs_NHC.conf
rsmc_conf={PARMhafs}/hafs_{RSMC}.conf  ;; File to read for rsmc_overrides

# Per-basin configurations: read no_basin_conf if basin_conf is missing
basin_overrides=yes    ;; read parm/hafs_(basin).conf
## File to read for recognized basins when basin_overrides is enabled
basin_conf={PARMhafs}/hafs_{vit.pubbasin2}.conf
## File to read for unrecognized basins when basin_overrides is enabled
no_basin_conf={PARMhafs}/hafs_other_basins.conf

[launch]

[sanity]

[grid_driver]

[input]

[chgres_ic]

[chgres_bc]

[vortexinit]
#initopt=0 ;; 0: full vortex initialization, 1: relocation only
#tdrconditionalvinit=no ;; if yes, relocation only when TDR data available

[bufrprep]

[fgat]

[gsi]

[enkf]

[merge]

[forecast]

[post]

[regribber]

[product]

[tracker]

[archive]
mkdir=yes     ;; make the archive directory? yes or no

