xml_entities_constant: # entities that contain no entity references
  SID: !calc all.SID.upper()
  MULTISTORM_SIDS: !calc all.get('MULTISTORM_SIDS','')
  SUBEXPT: !calc doc.config.SUBEXPT
  EXPT: !calc doc.config.EXPT
  CDSCRUB: !calc doc.dir.CDSCRUB
  EXhafs: !calc doc.dir.EXhafs
  HOMEhafs: !calc doc.dir.HOMEhafs
  USHhafs: !calc doc.dir.USHhafs
  PARMhafs: !calc doc.dir.PARMhafs
  JOBhafs: !calc doc.dir.JOBhafs
  PRE: !expand '{USHhafs}/rocoto_pre_job.sh'

  # These are automatically generated in run_hafs.py:
  WHERE_AM_I: !calc all.WHERE_AM_I
  HOLDVARS: '&COMhafs;/&STORMLABEL;.holdvars.txt'
  CONFhafs: "&COMhafs;/&STORMLABEL;.conf"
  BASINS: !calc all.BASINS
  RENUM: !calc all.RENUM
  STORMLABEL: !calc all.stormlabel
  SCRUB_COM: !calc all.SCRUB_COM
  SCRUB_WORK: !calc all.SCRUB_WORK
  MORE_LAUNCH_VARS: !calc all.MORE_LAUNCH_VARS
  CASE_ROOT: !calc all.CASE_ROOT

xml_entities_derived: # entities that refer back to earlier ones
  LOGhafs: '&CDSCRUB;/&SUBEXPT;/@Y@m@d@H/&SID;'
  WORKhafs: '&CDSCRUB;/&SUBEXPT;/@Y@m@d@H/&SID;'
  COMhafs: '&CDSCRUB;/&SUBEXPT;/com/@Y@m@d@H/&SID;'
  COMgfs: !calc ( doc.dir.get('COMgfs','&WORKhafs;/hafsdata') )

xml_env_vars:
  envir: "prod"
  PARAFLAG: "YES"
  WHERE_AM_I: "&WHERE_AM_I;"
  HOMEhafs: "&HOMEhafs;"
  USHhafs: "&USHhafs;"
  PYTHONPATH: "&USHhafs;"
  WORKhafs: "<cyclestr>&WORKhafs;</cyclestr>"
  COMhafs: "<cyclestr>&COMhafs;</cyclestr>"
  CONFhafs: "<cyclestr>&CONFhafs;</cyclestr>"
  HOLDVARS: "<cyclestr>&HOLDVARS;</cyclestr>"
  HAFS_FORCE_TMPDIR: "<cyclestr>&WORKhafs;/tmpdir</cyclestr>"
  jlogfile: "&LOGhafs;/jlogfile"

task_defaults:
  global_env_vars: !calc doc.xml_env_vars
  local_env_vars: {}
  accounting: !error "Task did not specify accounting"
  resources: !error "Task did not specify resources"

  both_resources: !JobRequest
    - !MergeMapping
      - !calc " { 'exe':exe, 'jobname':jobname, 'outerr':outerr } "
      - !calc resources[0]
  both_accounting: !MergeMapping
    - !calc " { 'exe':exe, 'jobname':jobname, 'outerr':outerr } "
    - !calc accounting
  more_xml: ''
  varsep: !expand '\n'

  # These three resource-related variables are expected by the HAFS scripts:
  TOTAL_TASKS: !ucalc 'resources.total_ranks()'
  NCTSK: !ucalc 'doc.accounting.nodes.max_ranks_per_node(resources[0])'
  OMP_NUM_THREADS: !ucalc 'doc.accounting.nodes.omp_threads_for(resources[0])'

  Rocoto: !uexpand |
    <command>{exe}</command>

    <!-- from resources and cmd_name_log -->
    {doc.accounting.sched.rocoto_resources(both_resources)}

    <!-- from accounting and cmd_name_log -->
    {doc.accounting.sched.rocoto_accounting(both_accounting)}

    <!-- Resource-related vars generated for underlying scripts. -->
    <envar><name>TOTAL_TASKS</name><value>{TOTAL_TASKS}</value></envar>
    <envar><name>OMP_THREADS</name><value>{OMP_NUM_THREADS}</value></envar>
    <envar><name>NCTSK</name><value>{NCTSK}</value></envar>

    <!-- from global_env_vars -->
    {varsep.join([ metasched.defenvar(k,v,literal=True) for k,v in global_env_vars.items() ])}

    <!-- from local_env_vars -->
    {varsep.join([ metasched.defenvar(k,v,literal=True) for k,v in local_env_vars.items() ])}

    <!-- from more_xml -->
    {more_xml}

    <!-- auto-generated by CROW -->

launch_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.small_serial
  TOTAL_TASKS: 1
  exe: "&PRE; &EXhafs;/exhafs_launch.py &MULTISTORM_SIDS; &BASINS; &RENUM; <cyclestr>@Y@m@d@H &SID; &CASE_ROOT; '&PARMhafs;' config.EXPT='&EXPT;' config.SUBEXPT='&SUBEXPT;' config.HOMEhafs='&HOMEhafs;' dir.USHhhafs='&USHhafs;' &MORE_LAUNCH_VARS; </cyclestr>"
  jobname: "hafs_launch_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_launch.log</cyclestr>"

input_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.input
  TOTAL_TASKS: 1
  exe: "&PRE; &EXhafs;/exhafs_input.py"
  jobname: "hafs_input_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_input.log</cyclestr>"

grid_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.grid
  exe: "&JOBhafs;/JHAFS_GRID"
  jobname: "hafs_grid_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_grid.log</cyclestr>"

chgres_ic_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.chgres_ic
  exe: "&JOBhafs;/JHAFS_CHGRES_IC"
  jobname: "hafs_chgres_ic_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_chgres_ic.log</cyclestr>"

chgres_bc_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.chgres_bc
  jobname: !expand "hafs_chgres_bc{dimval.tile:03d}_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: !expand "<cyclestr>&WORKhafs;/hafs_chgres_bc{dimval.tile:03d}.log</cyclestr>"
  exe: "&JOBhafs;/JHAFS_CHGRES_BC"
  chgres_bc: !calc '{"jobname":jobname,"outerr":outerr,"exe":exe}'
  more_xml: !uexpand |
    <envar><name>BC_GROUPN</name><value>{len(dimlist.tile)}</value></envar>
    <envar><name>BC_GROUPI</name><value>{dimval.tile:03d}</value></envar>

forecast_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.forecast
  exe: "&JOBhafs;/JHAFS_FORECAST"
  jobname: "hafs_forecast_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_forecast.log</cyclestr>"

post_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.post
  exe: "&JOBhafs;/JHAFS_POST"
  jobname: "hafs_post_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_post.log</cyclestr>"

product_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.product
  exe: "&JOBhafs;/JHAFS_PRODUCT"
  jobname: "hafs_product_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_product.log</cyclestr>"

archive_disk_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.archive_disk
  TOTAL_TASKS: 1
  local_env_vars:
    ARCHIVE_STEP: DISK
  exe: "&PRE; &EXhafs;/exhafs_archive.py"
  jobname: "hafs_archive_disk_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_archive_disk.log</cyclestr>"

archive_tape_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.archive_tape
  TOTAL_TASKS: 1
  local_env_vars:
    ARCHIVE_STEP: TAPE
  exe: "&PRE; &EXhafs;/exhafs_archive.py"
  jobname: "hafs_archive_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&WORKhafs;/hafs_archive.log</cyclestr>"

archive_fv3out_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.archive_fv3out
  TOTAL_TASKS: 1
  exe: "&PRE; &EXhafs;/exhafs_archive_fv3out.py"
  jobname: "hafs_archive_fv3out_&SID;_<cyclestr>@Y@m@d@H"
  outerr: "<cyclestr>&WORKhafs;/hafs_archive_fv3out.log</cyclestr>"

scrub_work_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.scrub_work
  TOTAL_TASKS: 1
  local_env_vars:
    HAFS_FORCE_ALT_TMPDIR: "&LOGhafs;"
  exe: "&PRE; &USHhafs;/hafs_scrub.py &SCRUB_WORK; WORK"
  jobname: "hafs_scrub_work_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&LOGhafs;/hafs_scrub_work_&SID;_@Y@m@d@H.log</cyclestr>"
  
scrub_com_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.scrub_com
  TOTAL_TASKS: 1
  local_env_vars:
    HAFS_FORCE_ALT_TMPDIR: "&LOGhafs;"
  exe: "&PRE; &USHhafs;/hafs_scrub.py &SCRUB_COM; COM"
  jobname: "hafs_scrub_com_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&LOGhafs;/hafs_scrub_com_&SID;_@Y@m@d@H.log</cyclestr>"

donefile_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.small_serial
  TOTAL_TASKS: 1
  local_env_vars:
    HAFS_FORCE_ALT_TMPDIR: "&LOGhafs;"
  exe: "&USHhafs;/hafs_donefile.py <cyclestr>&COMhafs;/&STORMLABEL;.done</cyclestr>"
  jobname: "<cyclestr>hafs_donefile_&SID;_@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&LOGhafs;/hafs_donefile_&SID;_@Y@m@d@H.log</cyclestr>"

completion_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*', { recurse: inherit } ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.small_serial
  exe: "/bin/true"
  jobname: "<cyclestr>hafs_completion_&SID;_@Y@m@d@H</cyclestr>"
  outerr: "<cyclestr>&LOGhafs;/hafs_completion_&SID;_@Y@m@d@H.log</cyclestr>"
