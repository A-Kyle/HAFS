task_cmd_name_log:
  launch: !JobRequest
    - exe: "&PRE; &EXhafs;/exhafs_launch.py &MULTISTORM_SIDS; &BASINS; &RENUM; <cyclestr>@Y@m@d@H &SID; &CASE_ROOT; '&PARMhafs;' config.EXPT='&EXPT;' config.SUBEXPT='&SUBEXPT;' config.HOMEhafs='&HOMEhafs;' dir.USHhhafs='&USHhafs;' &MORE_LAUNCH_VARS; </cyclestr>"
      jobname: "hafs_launch_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_launch.log</cyclestr>"

  completion: !JobRequest
    - exe: "/bin/true"
      jobname: "<cyclestr>hafs_completion_&SID;_@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&LOGhafs;/hafs_completion_&SID;_@Y@m@d@H.log</cyclestr>"

  input: !JobRequest
    - exe: "&PRE; &EXhafs;/exhafs_input.py"
      jobname: "hafs_input_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_input.log</cyclestr>"

  grid: !JobRequest
    - exe: "&JOBhafs;/JHAFS_GRID"
      jobname: "hafs_grid_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_grid.log</cyclestr>"

  chgres_ic: !JobRequest
    - exe: "&JOBhafs;/JHAFS_CHGRES_IC"
      jobname: "hafs_chgres_ic_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_chgres_ic.log</cyclestr>"

  chgres_bc: !JobRequest
    - exe: "&JOBhafs;/JHAFS_CHGRES_BC"
      jobname: "hafs_chgres_bc_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_chgres_bc.log</cyclestr>"

  forecast: !JobRequest
    - exe: "&JOBhafs;/JHAFS_FORECAST"
      jobname: "hafs_forecast_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_forecast.log</cyclestr>"

  post: !JobRequest
    - exe: "&JOBhafs;/JHAFS_POST"
      jobname: "hafs_post_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_post.log</cyclestr>"

  product: !JobRequest
    - exe: "&JOBhafs;/JHAFS_PRODUCT"
      jobname: "hafs_product_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_product.log</cyclestr>"

  archive_disk: !JobRequest
    - exe: "&PRE; &EXhafs;/exhafs_archive.py"
      jobname: "hafs_archive_disk_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_archive_disk.log</cyclestr>"

  archive_tape: !JobRequest
    - exe: "&PRE; &EXhafs;/exhafs_archive.py"
      jobname: "hafs_archive_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&WORKhafs;/hafs_archive.log</cyclestr>"

  archive_fv3out: !JobRequest
    - exe: "&PRE; &EXhafs;/exhafs_archive_fv3out.py"
      jobname: "hafs_archive_fv3out_&SID;_<cyclestr>@Y@m@d@H"
      outerr: "<cyclestr>&WORKhafs;/hafs_archive_fv3out.log</cyclestr>"

  scrub_work: !JobRequest
    - exe: "&PRE; &USHhafs;/hafs_scrub.py &SCRUB_WORK; WORK"
      jobname: "hafs_scrub_work_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&LOGhafs;/hafs_scrub_work_&SID;_@Y@m@d@H.log</cyclestr>"

  scrub_com: !JobRequest
    - exe: "&PRE; &USHhafs;/hafs_scrub.py &SCRUB_COM; COM"
      jobname: "hafs_scrub_com_&SID;_<cyclestr>@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&LOGhafs;/hafs_scrub_com_&SID;_@Y@m@d@H.log</cyclestr>"
  
  donefile: !JobRequest
    - exe: "&USHhafs;/hafs_donefile.py <cyclestr>&COMhafs;/&STORMLABEL;.done</cyclestr>"
      jobname: "<cyclestr>hafs_donefile_&SID;_@Y@m@d@H</cyclestr>"
      outerr: "<cyclestr>&LOGhafs;/hafs_donefile_&SID;_@Y@m@d@H.log</cyclestr>"

xml_entities_constant: # entities that contain no entity references
  SID: !calc all.SID.upper()
  MULTISTORM_SIDS: !calc all.get('MULTISTORM_SIDS','')
  SUBEXPT: !calc doc.config.SUBEXPT
  EXPT: !calc doc.config.EXPT
  CDSCRUB: !calc doc.dir.CDSCRUB
  EXhafs: !calc doc.dir.EXhafs
  HOMEhafs: !calc doc.dir.HOMEhafs
  USHhafs: !calc doc.dir.USHhafs
  PARMhafs: !calc doc.dir.PARMhafs
  JOBhafs: !calc doc.dir.JOBhafs
  PRE: !expand '{USHhafs}/rocoto_pre_job.sh'

  # These are automatically generated in run_hafs.py:
  WHERE_AM_I: !calc all.WHERE_AM_I
  HOLDVARS: !calc all.HOLDVARS
  CONFhafs: !calc all.CONFhafs
  BASINS: !calc all.BASINS
  RENUM: !calc all.RENUM
  STORMLABEL: !calc all.stormlabel
  SCRUB_COM: !calc all.SCRUB_COM
  SCRUB_WORK: !calc all.SCRUB_WORK
  MORE_LAUNCH_VARS: !calc all.MORE_LAUNCH_VARS
  CASE_ROOT: !calc all.CASE_ROOT

xml_entities_derived: # entities that refer back to earlier ones
  LOGhafs: '&CDSCRUB;/&SUBEXPT;/@Y@m@d@H/&SID;'
  WORKhafs: '&CDSCRUB;/&SUBEXPT;/@Y@m@d@H/&SID;'
  COMhafs: '&CDSCRUB;/&SUBEXPT;/com/@Y@m@d@H/&SID;'
  COMgfs: !calc ( doc.dir.get('COMgfs','&WORKhafs;/hafsdata') )

xml_env_vars:
  envir: "prod"
  PARAFLAG: "YES"
  WHERE_AM_I: "&WHERE_AM_I;"
  HOMEhafs: "&HOMEhafs;"
  USHhafs: "&USHhafs;"
  PYTHONPATH: "&USHhafs;"
  WORKhafs: "<cyclestr>&WORKhafs;</cyclestr>"
  COMhafs: "<cyclestr>&COMhafs;</cyclestr>"
  CONFhafs: "<cyclestr>&CONFhafs;</cyclestr>"
  HOLDVARS: "<cyclestr>&HOLDVARS;</cyclestr>"
  HAFS_FORCE_TMPDIR: "<cyclestr>&WORKhafs;/tmpdir</cyclestr>"
  jlogfile: "&LOGhafs;/jlogfile"

task_defaults:
  global_env_vars: !calc doc.xml_env_vars
  local_env_vars: {}
  accounting: !error "Task did not specify accounting"
  resources: !error "Task did not specify resources"
  cmd_name_log: !error "Task did not specify task_cmd_name_log"
  both_resources: !JobRequest
    - !MergeMapping
      - !calc resources[0]
      - !calc cmd_name_log[0]
  both_accounting: !MergeMapping
    - !calc accounting
    - !calc cmd_name_log[0]
  more_xml: ''
  varsep: !expand '\n'
  Rocoto: !expand |
    <!-- from cmd_name_log[0].exe -->
    <command>{cmd_name_log[0].exe}</command>

    <!-- from resources and cmd_name_log -->
    {doc.accounting.sched.rocoto_resources(both_resources)}
    <!-- from accounting and cmd_name_log -->
    {doc.accounting.sched.rocoto_accounting(both_accounting)}
    <!-- from global_env_vars -->
    {varsep.join([ metasched.defenvar(k,v,literal=True) for k,v in global_env_vars.items() ])}

    <!-- from local_env_vars -->
    {varsep.join([ metasched.defenvar(k,v,literal=True) for k,v in local_env_vars.items() ])}

    <!-- from more_xml -->
    {more_xml}

    <!-- auto-generated by CROW -->

launch_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.small_serial
  local_env_vars: { TOTAL_TASKS: 1 }
  cmd_name_log: !calc doc.task_cmd_name_log.launch

input_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.input
  local_env_vars: { TOTAL_TASKS: 1 }
  cmd_name_log: !calc doc.task_cmd_name_log.input

grid_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.grid
  cmd_name_log: !calc doc.task_cmd_name_log.grid

chgres_ic_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.chgres_ic
  cmd_name_log: !calc doc.task_cmd_name_log.chgres_ic

chgres_bc_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  cmd_name_log: !calc doc.task_cmd_name_log.chgres_bc
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.chgres_bc

forecast_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.forecast
  cmd_name_log: !calc doc.task_cmd_name_log.forecast

post_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.post
  cmd_name_log: !calc doc.task_cmd_name_log.post

product_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.pe
  resources: !calc doc.resources.product
  cmd_name_log: !calc doc.task_cmd_name_log.product

archive_disk_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.archive_disk
  cmd_name_log: !calc doc.task_cmd_name_log.archive_disk
  local_env_vars:
    TOTAL_TASKS: 1
    ARCHIVE_STEP: DISK

archive_tape_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.archive_tape
  cmd_name_log: !calc doc.task_cmd_name_log.archive_tape
  local_env_vars:
    TOTAL_TASKS: 1
    ARCHIVE_STEP: TAPE

archive_fv3out_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.service
  resources: !calc doc.resources.archive_fv3out
  cmd_name_log: !calc doc.task_cmd_name_log.archive_fv3out
  local_env_vars: { TOTAL_TASKS: 1 }

scrub_work_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.scrub_work
  cmd_name_log: !calc doc.task_cmd_name_log.scrub_work
  local_env_vars:
    TOTAL_TASKS: 1
    HAFS_FORCE_ALT_TMPDIR: "&LOGhafs;"
  
scrub_com_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.scrub_com
  cmd_name_log: !calc doc.task_cmd_name_log.scrub_com
  local_env_vars:
    TOTAL_TASKS: 1
    HAFS_FORCE_ALT_TMPDIR: "&LOGhafs;"

donefile_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.small_serial
  cmd_name_log: !calc doc.task_cmd_name_log.donefile
  local_env_vars:
    TOTAL_TASKS: 1
    HAFS_FORCE_ALT_TMPDIR: "&LOGhafs;"

completion_task:
  Inherit: !Inherit [ [ doc.task_defaults, '.*' ] ]
  accounting: !calc doc.accounting.serial
  resources: !calc doc.resources.small_serial
  cmd_name_log: !calc doc.task_cmd_name_log.completion
