###########################################################
#ARCH	AIX  #dmpar 
#

NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

BYTE_ORDER     =  BIG_ENDIAN
SFC            =  xlf_r 
SF90           =  xlf90  -qfree
SCC            =  xlc_r
DEBUG_FFLAGS   =  -g -qsigtrap -qfullpath -C -qflttrap=zerodivide:enable -qinitauto=FF911299
FFLAGS         =  -O -qnosave -qarch=auto -q64 -DIBM4 # $(DEBUG_FFLAGS)
FFLAGS_SHIPS   =  -O -qnosave -qarch=auto -q64
FFLAGS_DOUBLE  =  -qintsize=4 -qrealsize=8
FFLAGS_SINGLE  =  -qintsize=4 -qrealsize=4

FFLAGS_TRACKER =  -O -qcheck -qextchk -qarch=auto -qflttrap=ov:zero:inv:enable $(FFLAGS_DOUBLE)

CPP            =  /usr/lib/cpp 
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DAIX -DMPI -DSERIAL_IO -I/usr/lpp/ppe.poe/include/thread
FPPFLAGS       =  $(CPPFLAGS)
ARFLAGS        =  -ruv -X64

DM_FC          =  mpxlf_r  
DM_F90         =  mpxlf90_r  -qfree
DM_CC          =  mpcc_r

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -I ./ -q64 -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -DIBM4 -DAIX # -DVERBOSE
DEBUG_CFLAGS   =  -C -qfullpath

ESSLLIB        =  -lessl
MASSLIB        =  -lmass

###########################################################
#ARCH	Linux i486 i586 i686, PGI compiler w/LAPACK #dmpar  
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =   -Wl,-noinhibit-exec 

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  pgf90
SF90           =  pgf90 -Mfree -C 
SCC            =  pgcc
DEBUG_FLAGS    =  -g -Ktrap=fp -C 
FFLAGS         =  -O0 -DLANGUAGE_FORTRAN -Kieee -pc 32 -byteswapio -DsysLinux -DLINUX # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O0 -Kieee -pc 32
FFLAGS_BUFR    =  -O0 -DLANGUAGE_FORTRAN -Kieee -pc 32 -DsysLinux -DLINUX # $(DEBUG_FLAGS)
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -i4 -r8
FFLAGS_SINGLE  =  -i4 -r4
FFLAGS_TRACKER =  -O0 -DLANGUAGE_FORTRAN -Kieee -pc 32 -byteswapio -DsysLinux -DLINUX $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -I$(WRF_DIR)/inc \
		  -DNAN2003 -DTIMER
##		  -DNAN2003 -DTIMER -DRELO

FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp

ARFLAGS        =  -ruv

DM_FC          =  mpif90 -f90=pgf90
DM_F90         =  mpif90 -Mfree -f90=pgf90
DM_CC          =  mpicc 

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char -DFortranInt=int -DFortranLlong='long long'
DEBUG_CFLAGS   =  

ESSLLIB        =  -lblas -llapack
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

###########################################################
#ARCH	Linux x86_64, PGI compiler w/LAPACK # dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec 

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  pgf90
SF90           =  pgf90 -Mfree -C 
SCC            =  pgcc
DEBUG_FLAGS    =  -g -Ktrap=fp -C 
FFLAGS         =  -O0 -Kieee -pc 64 -byteswapio -DLANGUAGE_FORTRAN -DsysLinux -DLINUX # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O0 -Kieee -pc 64
FFLAGS_BUFR    =  -O0 -Kieee -pc 64 -DLANGUAGE_FORTRAN -DsysLinux -DLINUX # $(DEBUG_FLAGS)
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -i4 -r8
FFLAGS_SINGLE  =  -i4 -r4
FFLAGS_TRACKER =  -O0 -Kieee -pc 64 -byteswapio -DLANGUAGE_FORTRAN -DsysLinux -DLINUX $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -I$(WRF_DIR)/inc \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  mpif90 -f90=pgf90
DM_F90         =  mpif90 -Mfree -f90=pgf90
DM_CC          =  mpicc 

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char -DFortranInt=int -DFortranLlong='long long'
DEBUG_CFLAGS   =  

ESSLLIB        =  -lblas -llapack
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

###########################################################
#ARCH	Linux x86_64, PGI compiler w/LAPACK, SGI MPT # dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec -L$(MPI_ROOT)/lib -lmpi

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  pgf90
SF90           =  pgf90 -Mfree -C 
SCC            =  pgcc
DEBUG_FLAGS    =  -g -Ktrap=fp -C 
FFLAGS         =  -O0 -Kieee -pc 64 -byteswapio -DLANGUAGE_FORTRAN \
                  -DsysLinux -DLINUX -I$(MPI_ROOT)/include # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O0 -Kieee -pc 64 -I$(MPI_ROOT)/include
FFLAGS_BUFR    =  -O0 -Kieee -pc 64 -DLANGUAGE_FORTRAN -DsysLinux -DLINUX \
                  -I$(MPI_ROOT)/include # $(DEBUG_FLAGS)
CFLAGS_BUFR    =  -O3 -DUNDERSCORE -I$(MPI_ROOT)/include
FFLAGS_DOUBLE  =  -i4 -r8
FFLAGS_SINGLE  =  -i4 -r4
FFLAGS_TRACKER =  -O0 -Kieee -pc 64 -byteswapio -DLANGUAGE_FORTRAN -DsysLinux \
                  -DLINUX $(FFLAGS_DOUBLE) -I$(MPI_ROOT)/include              \
                  # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -DMPI -DSERIAL_IO \
                  -I$(WRF_DIR)/inc -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  pgf90
DM_F90         =  pgf90 -Mfree -C
DM_CC          =  pgcc

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char \
                  -DFortranInt=int -DFortranLlong='long long'          \
                  -I$(MPI_ROOT)/include
DEBUG_CFLAGS   =  

ESSLLIB        =  -lblas -llapack
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

###########################################################
#ARCH	Linux i486 i586 i686, Intel compiler w/MKL 	# dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec 

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc
DEBUG_FLAGS    =  -g -fpe0 -traceback 
FFLAGS         =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O3 -fp-model precise
FFLAGS_BUFR    =  -O3 -DLINUX -fp-model precise -assume byterecl
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
FFLAGS_TRACKER =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -DMPI -DSERIAL_IO -I$(WRF_DIR)/inc \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp

ARFLAGS        =  -ruv

DM_FC          =  mpif90
DM_F90         =  mpif90 -free
DM_CC          =  mpicc

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' 
DEBUG_CFLAGS   =

ESSLLIB        =  -mkl=sequential 
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

###########################################################
#ARCH	Linux i486 i586 i686, Intel compiler w/ LAPACK	# dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec -i_dynamic

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc
DEBUG_FLAGS    =  -g -fpe0 -traceback 
FFLAGS         =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O3 -fp-model precise 
FFLAGS_BUFR    =  -O3 -DLINUX -fp-model precise -assume byterecl
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
FFLAGS_TRACKER =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -P -D$(BYTE_ORDER) -DWRF -DLINUX -I$(WRF_DIR)/inc \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp

ARFLAGS        =  -ruv

DM_FC          =  mpif90
DM_F90         =  mpif90 -free
DM_CC          =  mpicc

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' 
DEBUG_CFLAGS   =

ESSLLIB        =  -L$(LAPACK_PATH) -lblas -llapack
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

###########################################################
#ARCH	Linux x86_64, Intel compiler w/MKL	# dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc
DEBUG_FLAGS    =  -g -fpe0 -traceback 
FFLAGS         =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O3 -fp-model precise
FFLAGS_BUFR    =  -O3 -DLINUX -fp-model precise -assume byterecl
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
FFLAGS_TRACKER =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -P -D$(BYTE_ORDER) -DWRF -DLINUX -DMPI -DSERIAL_IO -I$(WRF_DIR)/inc \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  mpif90 -f90=ifort
DM_F90         =  mpif90 -free -f90=ifort
DM_CC          =  mpicc -cc=icc

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' 
DEBUG_CFLAGS   =

ESSLLIB        =  -mkl=sequential 
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

###########################################################
#ARCH	Linux x86_64, Intel compiler w/MKL, SGI MPT	# dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec -i_dynamic -L$(MPI_ROOT)/lib -lmpi

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc
DEBUG_FLAGS    =  -g -fpe0 -traceback 
FFLAGS         =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl -I$(MPI_ROOT)/include # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O3 -msse2 -fp-model precise
FFLAGS_BUFR    =  -O3 -msse2 -DLINUX -fp-model precise -assume byterecl
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
FFLAGS_TRACKER =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -DMPI -DSERIAL_IO \
                  -I$(WRF_DIR)/inc -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  ifort
DM_F90         =  ifort -free
DM_CC          =  icc

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char \
                  -DFortranInt=int -DFortranLlong='long long'          \
                  -I$(MPI_ROOT)/include
DEBUG_CFLAGS   =

ESSLLIB        =  -mkl=sequential 
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

##################################################################
#ARCH	Linux x86_64, Intel compiler w/LAPACK	# dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec -i_dynamic

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc
DEBUG_FLAGS    =  -g -fpe0 -traceback 
FFLAGS         =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O3 -fp-model precise
FFLAGS_BUFR    =  -O3 -DLINUX -fp-model precise -assume byterecl
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
FFLAGS_TRACKER =  -O3 -convert big_endian -DLINUX -fp-model precise -assume byterecl $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -P -D$(BYTE_ORDER) -DWRF -DLINUX -I$(WRF_DIR)/inc \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  mpif90
DM_F90         =  mpif90 -free
DM_CC          =  mpicc

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' 
DEBUG_CFLAGS   =

ESSLLIB        =  -L$(LAPACK_PATH) -lblas -llapack
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

##################################################################
#ARCH	Linux x86_64, Intel compiler w/LAPACK, SGI MPT	# dmpar 
#
NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

LDFLAGS        =  -Wl,-noinhibit-exec -i_dynamic -L$(MPI_ROOT)/lib -lmpi

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc
DEBUG_FLAGS    =  -g -fpe0 -traceback
FFLAGS         =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl -I$(MPI_ROOT)/include # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O3 -msse2 -fp-model precise -I$(MPI_ROOT)/include
FFLAGS_BUFR    =  -O3 -msse2 -DLINUX -fp-model precise -assume byterecl \
                  -I$(MPI_ROOT)/include
CFLAGS_BUFR    =  -O3 -DUNDERSCORE -I$(MPI_ROOT)/include
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
FFLAGS_TRACKER =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl $(FFLAGS_DOUBLE) -I$(MPI_ROOT)/include \
                  # $(DEBUG_FLAGS)
CPP            =  /lib/cpp 
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -I$(WRF_DIR)/inc \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  ifort
DM_F90         =  ifort
DM_CC          =  icc

FC             =  CONFIGURE_FC
F90            =  CONFIGURE_F90
CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char \
                  -DFortranInt=int -DFortranLlong='long long'          \
                  -I$(MPI_ROOT)/include
DEBUG_CFLAGS   =

ESSLLIB        =  -L$(LAPACK_PATH) -lblas -llapack
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe


###########################################################
#ARCH	Linux x86_64, Intel compiler w/MKL, IBM POE	# dmpar 
#
LDFLAGS        =  -Wl,-noinhibit-exec

NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc
OMP_FFLAGS     = -openmp
DEBUG_FLAGS    =  -g -fpe0 -traceback 
FFLAGS         =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl # $(DEBUG_FLAGS)
FFLAGS_SHIPS   =  -O3 -msse2 -fp-model precise
FFLAGS_BUFR    =  -O3 -msse2 -DLINUX -fp-model precise -assume byterecl
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
FFLAGS_TRACKER =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -I$(WRF_DIR)/inc -DSERIAL_IO \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  mpfort
DM_F90         =  mpfort -free
DM_CC          =  mpcc
DM_LDFLAGS     =  $(LD_FLAGS) -L$(MPI_ROOT)/lib
DM_FFLAGS      =  $(FFLAGS) -I$(MPI_ROOT)/include
DM_CFLAGS      =  $(CFLAGS) -I$(MPI_ROOT)/include

#FC             =  CONFIGURE_FC
#F90            =  CONFIGURE_F90
#CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char \
                  -DFortranInt=int -DFortranLlong='long long'
DEBUG_CFLAGS   =

ESSLLIB        =  -mkl=sequential 
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

###########################################################
#ARCH	Linux x86_64, Intel compiler, CrayPE	# dmpar 
#
LDFLAGS        =  -Wl,-noinhibit-exec

NETCDF_INCLUDE  = CONFIGURE_NETCDF_INCLUDE
NETCDF_LDFLAGS  = CONFIGURE_NETCDF_LIBS

BYTE_ORDER     =  LITTLE_ENDIAN
SFC            =  ftn
SF90           =  ftn -free
SCC            =  cc
OMP_FFLAGS     = -qopenmp
DEBUG_FLAGS    =  -g -fpe0 -traceback 
#FFLAGS         =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise 
FFLAGS         =  -O3 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl # $(DEBUG_FLAGS)
#FFLAGS_SHIPS   =  -O3 -msse2 -fp-model precise
FFLAGS_SHIPS   =  -O3 -fp-model precise
#FFLAGS_BUFR    =  -O3 -msse2 -DLINUX -fp-model precise -assume byterecl
FFLAGS_BUFR    =  -O3 -DLINUX -fp-model precise -assume byterecl
CFLAGS_BUFR    =  -O3 -DUNDERSCORE
FFLAGS_DOUBLE  =  -integer-size 32 -real-size 64
FFLAGS_SINGLE  =  -integer-size 32 -real-size 32
#FFLAGS_TRACKER =  -O3 -msse2 -convert big_endian -DLINUX -fp-model precise 
FFLAGS_TRACKER =  -O3 -convert big_endian -DLINUX -fp-model precise \
                  -assume byterecl $(FFLAGS_DOUBLE) # $(DEBUG_FLAGS)
CPP            =  /lib/cpp
CPPFLAGS       =  -C -P -D$(BYTE_ORDER) -DWRF -DLINUX -I$(WRF_DIR)/inc -DSERIAL_IO \
		  -DNAN2003 -DTIMER -DRELO
FPPFLAGS       =  $(CPPFLAGS) -traditional-cpp
ARFLAGS        =  -ruv

DM_FC          =  ftn
DM_F90         =  ftn -free
DM_CC          =  cc
DM_LDFLAGS     =  $(LD_FLAGS) -L$(MPI_ROOT)/lib
DM_FFLAGS      =  $(FFLAGS) -I$(MPI_ROOT)/include
DM_CFLAGS      =  $(CFLAGS) -I$(MPI_ROOT)/include

#FC             =  CONFIGURE_FC
#F90            =  CONFIGURE_F90
#CC             =  CONFIGURE_CC

CFLAGS         =  -O0 -DLINUX -DUNDERSCORE -Dfunder -DFortranByte=char \
                  -DFortranInt=int -DFortranLlong='long long'
DEBUG_CFLAGS   =

ESSLLIB        =  -mkl=sequential 
MASSLIB        = 
WRF_DIR        =  CONFIGURE_WRF_PATH
SED_FTN        =  $(WRF_DIR)/tools/standard.exe

##################################################################
#ARCH	NULL
