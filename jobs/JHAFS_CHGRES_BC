#!/bin/ksh -l
set -xa

export COMIN=${COMIN:-/gpfs/hps3/ptmp/Bin.Liu/HAFS/com/2019041000/00L}
export stormlabel=${stormlable:-storm1}
HOLDVARS=${COMIN}/${stormlabel}.holdvars.txt
source ${HOLDVARS}

export EXPT=${EXPT:-HAFS}
export SUBEXPT=${SUBEXPT:-${EXPT}}

export cyc=${cyc:-00}
export stormlabel=${stormlabel:-storm1}
export STORM=${STORM:-FAKE}
export STORMID=${STORMID:-00L}

export NHRS=126
export CASE=C768
export CRES=`echo $CASE | cut -c 2-`
export gtype=regional           # grid type = uniform, stretch, nest, or stand alone regional
export NTRAC=7			# output all gfdl mp tracers

export machine=WCOSS_C
#export RUN_ENVIR=${RUN_ENVIR:-prod}
export RUN_ENVIR=${envir:-prod}

if [ "$RUN_ENVIR" = prod ]; then
# load modules
  if [ "$machine" = WCOSS_C ]; then
    . $MODULESHOME/init/sh 2>>/dev/null
    module load PrgEnv-intel prod_envir cfp-intel-sandybridge/1.1.0 2>>/dev/null
    module list
  elif [ "$machine" = DELL ]; then
    set +x
    . /usrx/local/prod/lmod/lmod/init/sh
    module load EnvVars/1.0.2 lmod/7.7 settarg/7.7 lsf/10.1 prod_envir/1.0.2
    module load ips/18.0.1.163
    module load impi/18.0.1
    module load NetCDF/4.5.0
    module load HDF5-serial/1.10.1
    module load CFP/2.0.1
    module list
    set -x
  elif [ "$machine" = THEIA ]; then
    module use -a /scratch3/NCEPDEV/nwprod/lib/modulefiles
    module load netcdf/4.3.0 hdf5/1.8.14 2>>/dev/null
    module list
  fi
fi

####################################
# Specify Execution Areas
####################################
export HOMEhafs=${HOMEhafs:-/gpfs/hps3/emc/hwrf/noscrub/${USER}/save/HAFS}
export WORKhafs=${WORKhafs:-/gpfs/hps3/ptmp/${USER}/${SUBEXPT}/${CDATE}/${STORMID}}
export USHhafs=${USHhafs:-${HOMEhafs}/ush}
export EXEChafs=${EXEChafs:-${HOMEhafs}/exec}
export FIXhafs=${FIXhafs:-${HOMEhafs}/fix}

export HOMEgfs=${HOMEgfs:-/gpfs/hps3/emc/hwrf/noscrub/${USER}/save/HAFS/fv3gfs}
export EXECgfs=${EXECgfs:-${HOMEgfs}/exec}
export FIXgfs=${FIXgfs:-${HOMEgfs}/fix}
export USHgfs=${USHfv3:-${HOMEgfs}/ush}

export FIXfv3=${FIXhafs}/fix_fv3
export FIXam=${FIXhafs}/fix_am
export CHGRESEXEC=${EXEChafs}/hafs_chgres.x
export CHGRESSH=${USHhafs}/hafs_chgres.sh

####################################
# Run setpdy and initialize PDY variables
####################################
#setpdy.sh
#. ./PDY

PDYtmp=$(echo ${YMDH} | cut -c 1-8 )
export PDY=${PDY:-${PDYtmp}}

#####################################
# Working directories
#####################################
export INPdir=${INPdir:-${WORKhafs}/INPUT_${CASE}}
export OUTDIR=${OUTDIR:-${WORKhafs}/chgres.bc.out}
export DATA=${WORKhafs}/chgres.bc.work

rm -rf $DATA
mkdir -p $INPdir $OUTDIR $DATA
cd $DATA

#####################################
# Define COM directories
#####################################
#export COMROOT=${COMROOT:-/gpfs/hps/nco/ops/com}
#export COMgfs=${COMgfs:-/${COMROOT}/gfs/prod}

#if [ ! -e /gpfs/dell3/ptmp/emc.glopara/ROTDIRS/prfv3rt1/vrfyarch/gfs.$PDY/$cyc/gfs.t${cyc}z.atmf057.nemsio ]; then
#  export COMgfs=${COMgfs:-/gpfs/gp2/ptmp/Eric.Rogers/prfv3rt1}
#else
#  export COMgfs=${COMgfs:-/gpfs/dell3/ptmp/emc.glopara/ROTDIRS/prfv3rt1/vrfyarch}
#fi

export COMgfs=${COMgfs:-/gpfs/dell1/nco/ops/com/gfs/para}

export INIDIR=${COMgfs}/gfs.$PDY/$cyc

#####################################
# WCOSS environment settings
#####################################
if [ "$machine" = WCOSS_C ]; then
  export OMP_NUM_THREADS_CH=24
  export KMP_AFFINITY=disabled
  export APRUNC="aprun -n 1 -N 1 -j 1 -d $OMP_NUM_THREADS_CH -cc depth"
elif [ "$machine" = WCOSS_PHASE2 ]; then
  export OMP_NUM_THREADS=24
  export KMP_AFFINITY=disabled
elif [ "$machine" = DELL ]; then
#  export OMP_NUM_THREADS=24
  export KMP_AFFINITY=disabled
fi

env

#####################################
# Generate the BCs
#####################################
export REGIONAL=2

hour=3
end_hour=$NHRS
while (test "$hour" -le "$end_hour")
  do
  if [ $hour -lt 10 ]; then
    hour_name='00'$hour
  elif [ $hour -lt 100 ]; then
    hour_name='0'$hour
  else
    hour_name=$hour
  fi

#
# create input file for cfp in order to run multiple copies of exfv3sar_chgres.sh simultaneously
# since we are going to run simultaneously, we want different working directories for each hour
#
  BC_DATA=${DATA}/bctmp_$hour_name

  rm -rf $BC_DATA
  mkdir -p $BC_DATA
  echo "env REGIONAL=2 HALO=4 bchour=$hour_name DATA=$BC_DATA $HOMEhafs/scripts/exhafs_chgres.sh >&out.chgres.$hour_name" >> bcfile.input

  hour=`expr $hour + 3`
done

################################
# Execute the script.
################################
# for WCOSS we now run BC creation for all hours simultaneously
if [ $machine = WCOSS_C ]; then
  export APRUNC="time"
  export OMP_NUM_THREADS_CH=24
  aprun -j 1 -n ${NODES} -N 1 -d ${OMP_NUM_THREADS_CH} -cc depth cfp bcfile.input
  rm -f bcfile.input
elif [ $machine = WCOSS_PHASE2 ]; then
  export MP_PGMMODEL=mpmd
  export MP_CMDFILE=bcfile.input
  chmod 775 bcfile.input
  mpirun.lsf
  rm -f bcfile.input
elif [ $machine = DELL ]; then
#  export OMP_NUM_THREADS=24
  mpirun cfp bcfile.input
  rm -f bcfile.input
fi

mv $OUTDIR/gfs_bndy*nc $INPdir/.

exit $err
