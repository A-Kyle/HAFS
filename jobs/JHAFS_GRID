#!/bin/sh

set -xe

HOLDVARS=${HOLDVARS:-/can/not/find/storm1.holdvars.txt}
source ${HOLDVARS}

export EXPT=${EXPT:-HAFS}
export SUBEXPT=${SUBEXPT:-${EXPT}}

export CDATE=${CDATE:-${YMDH}}
export cyc=${cyc:-00}
export STORM=${STORM:-FAKE}
export STORMID=${STORMID:-00L}

export NHRS=${NHRS:-126}
export NBDYHRS=${NBDYHRS:-3}
export CASE=${CASE:-C768}
export CRES=`echo $CASE | cut -c 2-`
export gtype=${gtype:-regional}             # grid type = uniform, stretch, nest, or stand alone regional
# Need for grid types: stretch, nest and regional
export stetch_fac=${stetch_fac:-1.0001}     # Stretching factor for the grid
export target_lon=${target_lon:--62.0}      # center longitude of the highest resolution tile
export target_lat=${target_lat:-22.0}       # center latitude of the highest resolution tile
# Need for grid types: nest and regional
export refine_ratio=${refine_ratio:-4}      # Specify the refinement ratio for nest grid
export istart_nest=${istart_nest:-46}
export jstart_nest=${jstart_nest:-238}
export iend_nest=${iend_nest:-1485}
export jend_nest=${jend_nest:-1287}
export halo=${halo:-3}                      # halo size to be used in the atmosphere cubic sphere model for the grid tile.
export halop1=${halop1:-4}                  # halo size that will be used for the orography and grid tile in chgres
export halo0=${halo0:-0}                    # no halo, used to shave the filtered orography for use in the model

export ictype=${ICTYPE:-pfv3gfs}
export LEVS=${LEVELS:-65}
export NTRAC=7			# output all gfdl mp tracers

####################################
# Specify Execution Areas
####################################
export HOMEhafs=${HOMEhafs:-/gpfs/hps3/emc/hwrf/noscrub/${USER}/save/HAFS}
export WORKhafs=${WORKhafs:-/gpfs/hps3/ptmp/${USER}/${SUBEXPT}/${CDATE}/${STORMID}}
export COMIN=${COMIN:-/gpfs/hps3/ptmp/${USER}/${SUBEXPT}/com/${CDATE}/${STORMID}}
export COMOUT=${COMOUT:-/gpfs/hps3/ptmp/${USER}/${SUBEXPT}/com/${CDATE}/${STORMID}}
export COMhafs=${COMhafs:-${COMOUT}}
export USHhafs=${USHhafs:-${HOMEhafs}/ush}
export PARMhafs=${PARMhafs:-${HOMEhafs}/parm}
export EXEChafs=${EXEChafs:-${HOMEhafs}/exec}
export FIXhafs=${FIXhafs:-${HOMEhafs}/fix}

export HOMEgfs=${HOMEgfs:-/gpfs/hps3/emc/hwrf/noscrub/${USER}/save/HAFS/fv3gfs}
export EXECgfs=${EXECgfs:-${HOMEgfs}/exec}
export FIXgfs=${FIXgfs:-${HOMEgfs}/fix}
export USHgfs=${USHfv3:-${HOMEgfs}/ush}

export FIXam=${FIXhafs}/fix_am
export FIXorog=${FIXhafs}/fix_orog

export FIXfv3=${FIXhafs}/fix_fv3
#If static domain
#export FIXfv3=${FIXhafs}/fix_fv3_regional_static
#export FIXfv3=${FIXhafs}/fix_fv3_globnest_static
#else relocatable domain
#export FIXfv3=${WORKhafs}/grid

export MAKEHGRIDEXEC=${EXEChafs}/hafs_make_hgrid.x
export MAKEMOSAICEXEC=${EXEChafs}/hafs_make_solo_mosaic.x
export FILTERTOPOEXEC=${EXEChafs}/hafs_filter_topo.x
export FREGRIDEXEC=${EXEChafs}/hafs_fregrid.x
export OROGEXEC=${EXEChafs}/hafs_orog.x
export SHAVEEXEC=${EXEChafs}/hafs_shave.x

export MAKEGRIDSSH=${USHhafs}/hafs_make_grid.sh
export MAKEOROGSSH=${USHhafs}/hafs_make_orog.sh
export FILTERTOPOSSH=${USHhafs}/hafs_filter_topo.sh

####################################
# Load Modules if Needed
####################################
export machine=${WHERE_AM_I:-wcoss_cray} # platforms: wcoss_cray, wcoss_dell_p3, theia, jet
#export RUN_ENVIR=${RUN_ENVIR:-prod}
export RUN_ENVIR=${envir:-prod}
if [ "$RUN_ENVIR" = prod ]; then
  module use ${HOMEhafs}/modulefiles
  module load modulefile.hafs.run.${machine}
  module list
fi

#####################################
# Environment settings
#####################################
  export TOTAL_TASKS=${TOTAL_TASKS:-1}
  export NCTSK=${NCTSK:-1}
  export NCNODE=${NCNODE:-24}
  export OMP_NUM_THREADS=${OMP_NUM_THREADS:-6}
  export KMP_STACKSIZE=1024m
if [ "$machine" = wcoss_cray ]; then
  #export NODES=1
  export APRUNS=${APRUNS:-"aprun -b -j1 -n1 -N1 -d1 -cc depth"}
  export APRUNF=${APRUNF:-"aprun -b -j1 -n${TOTAL_TASKS} -N${NCTSK} -d${OMP_NUM_THREADS} -cc depth cfp"}
  export APRUNC=${APRUNC:-"aprun -b -j1 -n${TOTAL_TASKS} -N${NCTSK} -d${OMP_NUM_THREADS} -cc depth"}
  export KMP_AFFINITY=disabled
elif [ "$machine" = wcoss_dell_p3 ]; then
  export APRUNS=${APRUNS:-"time"}
  export APRUNF=${APRUNF:-"mpirun cfp"}
  export APRUNC=${APRUNC:-"mpirun"}
elif [ "$machine" = theia ]; then
  export APRUNS=${APRUNS:-"time"}
  export APRUNF=${APRUNF:-"srun --multi-prog"}
  export APRUNC=${APRUNC:-"srun"}
elif [ "$machine" = jet ]; then
  export APRUNS=${APRUNS:-"time"}
  export APRUNF=${APRUNF:-"srun --multi-prog"}
  export APRUNC=${APRUNC:-"srun"}
else
  export APRUNS=${APRUNS:-"time"}
  export APRUNF=${APRUNF:-${MPISERIAL:-mpiserial}}
  export APRUNC=${APRUNC:-"mpirun"}
fi

env

####################################
# Run setpdy and initialize PDY variables
####################################
#setpdy.sh
#. ./PDY

PDYtmp=$(echo ${YMDH} | cut -c 1-8 )
export PDY=${PDY:-${PDYtmp}}

#####################################
# Working directories
#####################################
export OUTDIR=${OUTDIR:-${WORKhafs}/intercom/grid}
export DATA=${WORKhafs}/grid

export SCRUBDATA=${SCRUBDATA:-YES}

if [ "${SCRUBDATA}" = YES ]; then
  rm -rf $DATA
fi

mkdir -p $OUTDIR $DATA
cd $DATA

#####################################
# Generate the ICs and BC hour 0
#####################################
if [ $gtype = regional ] ; then
  export REGIONAL=1
  export HALO=4
#
# set the links to use the 4 halo grid and orog files
# these are necessary for creating the boundary data
#
  ln -sf $FIXfv3/$CASE/${CASE}_grid.tile7.halo4.nc $FIXfv3/$CASE/${CASE}_grid.tile7.nc
  ln -sf $FIXfv3/$CASE/${CASE}_oro_data.tile7.halo4.nc $FIXfv3/$CASE/${CASE}_oro_data.tile7.nc
else
#
# for gtype = uniform, stretch, or nest
#
  export REGIONAL=0
fi

#####################################
# Execute the script.
${HOMEhafs}/scripts/exhafs_chgres.sh
export err=$?
#####################################

mv $OUTDIR/gfs*nc $INPdir/.
mv $OUTDIR/sfc*nc $INPdir/.

exit $err
